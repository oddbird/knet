{
  "name": "grunt-qunit-istanbul",
  "description": "Run QUnit unit tests in a headless PhantomJS instance and create coverage reports with istanbul.",
  "version": "0.1.3",
  "homepage": "https://github.com/asciidisco/grunt-qunit-istanbul",
  "author": {
    "name": "Grunt Team",
    "url": "http://gruntjs.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/asciidisco/grunt-qunit-istanbul.git"
  },
  "bugs": {
    "url": "https://github.com/asciidisco/grunt-qunit-istanbul/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/asciidisco/grunt-qunit-istanbul/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt-lib-phantomjs-istanbul": "~0.1.1",
    "rimraf": "~2.1.4",
    "istanbul": "~0.1.32"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.2.0",
    "grunt-contrib-connect": "~0.1.1",
    "grunt-contrib-internal": "~0.4.2",
    "grunt": "~0.4.0",
    "difflet": "~0.2.3"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "contributors": [
    {
      "name": "\"Cowboy\" Ben Alman",
      "url": "http://benalman.com/"
    },
    {
      "name": "Tyler Kellen",
      "url": "http://goingslowly.com/"
    }
  ],
  "readme": "# grunt-qunit-istanbul\n> Run QUnit unit tests in a headless PhantomJS instance withn code coverage analysis provided by istanbul.\n\n# IMPORTANT\nThis is a fork of the grunt-contrib-qunit repo.\nI added the ability to generate [istanbul](http://gotwarlost.github.com/istanbul/) based test coverage reports.\nUnfortunately this couldn' be handled as a seperate plugin, because we need to hook in\ndeeper into grunt-contrib-qunit & grunt-lib-phantomjs structure :(\n\nThis plugin should work as a drop in replacement for your current `qunit` task,\nfor any further configuration, please check out the original plugins repo\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-qunit-istanbul --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-qunit-istanbul');\n```\n\n## Qunit task\n_Run this task with the `grunt qunit` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\nWhen installed by npm, this plugin will automatically download and install [PhantomJS][] locally via the [grunt-lib-phantomjs-istanbul][] library.\n\n[PhantomJS]: http://www.phantomjs.org/\n[grunt-lib-phantomjs-istanbul]: https://github.com/asciidisco/grunt-lib-phantomjs-istanbul\n\n### Options (Coverage object)\n\n#### src\nType: `array`\nDefault: `[]`\n\nThe js files you would like to end up in the coverage report.\n\n#### instrumentedFiles\nType: `string`\n\nA temporary folder (that will be automatically generated & deleted after the test suite finishes),\ncontaining the instrumented source code\n\n#### instrumentedFiles\nType: `string`\n\nA temporary folder (that will be automatically generated & deleted after the test suite finishes),\ncontaining the instrumented source code\n\n#### htmlReport\nType: `string`\nOptional\n\nA folder where the HTML reports should be stored\n\n#### coberturaReport\nType: `string`\nOptional\n\nA folder where the Cobertura reports should be stored\n\n#### lcovReport\nType: `string`\nOptional\n\nA folder where the LCOV reports should be stored\n\n#### baseUrl\nType: `string`\nDefault: `.`\nOptional\n\nIf you're running your qunit tests with the help of a webserver,\nyou have to point the coverage inspector to the physical path that\nis the base url of the qunit page you're running\n\n### Usage\n\n```\n    qunit: {\n      options: {\n        '--web-security': 'no',\n        coverage: {\n          src: ['src/js/**/*.js'],\n          instrumentedFiles: 'temp/',\n          htmlReport: 'report/coverage',\n          coberturaReport: 'report/'\n        }\n      },\n      all: ['test/**/*.html']\n    }\n```\n\n### Warning\nThere is currently a failure in the phantomjs npm module.\nIf you're running into an \"Phantom not found error\", please check [this issue](https://github.com/Obvious/phantomjs/issues/15) \n\n\n---\n\nOriginal Task by [\"Cowboy\" Ben Alman](http://benalman.com/)\nModified by [asciidisco](http://twitter.com/asciidisco)\n",
  "readmeFilename": "README.md",
  "_id": "grunt-qunit-istanbul@0.1.3",
  "dist": {
    "shasum": "d68737d811b3b9769fdf85abad70d26810534b74"
  },
  "_from": "grunt-qunit-istanbul@~0.1.3",
  "_resolved": "https://registry.npmjs.org/grunt-qunit-istanbul/-/grunt-qunit-istanbul-0.1.3.tgz"
}
